#include <iostream>
#include <vector>

void f(std::vector<int> &vec)
{
	for (int i = vec.size() - 1; i >= 0; --i)
	{
		if (vec[i] == 2)
		{
			vec.erase(vec.begin() + i);
		}
	}

	for (auto e : vec)
	{
		std::cout << e << " ";
	}
}

void iter(std::vector<int> &vec)
{
	std::vector<int>::const_iterator cit;
	cit = vec.cbegin();
	std::cout << *(cit + 2) << std::endl;

	for (cit; cit < vec.cend(); ++cit)
	{
		std::cout << *cit << " ";
	} std::cout << std::endl;

	std::vector<int>::reverse_iterator rit;

	for (rit = vec.rbegin(); rit < vec.rend(); ++rit)
	{
		std::cout << *rit << " ";
	} std::cout << std::endl;

	std::vector<int>::iterator it = vec.begin();
	advance(it, 3);
	vec.insert(it, 2);
	for (auto e : vec)
	{
		std::cout << e << " ";
	}
}

int main()
{
	std::vector<int> vec;

	for (int i = 0; i < 8; ++i)
	{
		vec.push_back(rand() % 3);
	}

	std::cout << "const/reverse iterator" << std::endl;
	iter(vec);

	std::cout << std::endl << "func vec" << std::endl;
	f(vec);
}
